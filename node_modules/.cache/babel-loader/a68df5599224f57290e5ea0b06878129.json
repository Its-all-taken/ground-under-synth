{"ast":null,"code":"import * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass.js';\nimport * as melodySettings from './tunes/melody.js';\nimport ToneSynth from './modules/MainTune.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nlet bassSynth;\nlet bassChorus;\nlet bassPingPongDelay;\nlet melodySynth;\nlet melodyChorus;\nlet melodyPingPongDelay;\nexport default class Container extends Component {\n  constructor(props) {\n    super(props);\n    this.handleEnd = () => {\n      Tone.Transport.stop();\n    };\n    this.handleStart = () => {\n      const _this$state = this.state,\n        melodySettings = _this$state.melodySettings,\n        bassSettings = _this$state.bassSettings;\n      //\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassChorus = new Tone.Chorus(bassSettings.chorus).start();\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      bassSynth.chain(bassChorus, bassPingPongDelay);\n      const bassPart = new Tone.Part((time, note) => {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = true;\n      //\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay);\n      const melodyPart = new Tone.Part((time, note) => {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = true;\n      //\n      //\n\n      Tone.Transport.start();\n    };\n    this.handleBassValueChange = (property, value) => {\n      const bassSettings = this.state.bassSettings;\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'synthVolume') {\n        bassSynth.volume.value = value;\n        bassSettings.synth.volume = value;\n      }\n      this.setState({\n        bassSettings\n      });\n    };\n    this.handleMelodyValueChange = (property, value) => {\n      const melodySettings = this.state.melodySettings;\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'synthVolume') {\n        bassSynth.volume.value = value;\n        bassSettings.synth.volume = value;\n      }\n      this.setState({\n        melodySettings\n      });\n    };\n    this.state = {\n      bassSettings,\n      melodySettings\n    };\n  }\n  render() {\n    const _this$state2 = this.state,\n      bassSettings = _this$state2.bassSettings,\n      melodySettings = _this$state2.melodySettings;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controls\"\n    }, /*#__PURE__*/React.createElement(SC_Button, {\n      text: \"\\u25B6\",\n      handleClick: this.handleStart\n    }), /*#__PURE__*/React.createElement(SC_Button, {\n      text: \"\\u25A0\",\n      handleClick: this.handleEnd\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"melodies\"\n    }, /*#__PURE__*/React.createElement(ToneSynth, {\n      settings: bassSettings,\n      handleValueChange: this.handleBassValueChange\n    }), /*#__PURE__*/React.createElement(ToneSynth, {\n      settings: melodySettings,\n      handleValueChange: this.handleMelodyValueChange\n    })));\n  }\n}","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","ToneSynth","SC_Button","SC_Slider","bassSynth","bassChorus","bassPingPongDelay","melodySynth","melodyChorus","melodyPingPongDelay","Container","constructor","props","handleEnd","Transport","stop","handleStart","state","Synth","synth","Chorus","chorus","start","PingPongDelay","pingPongDelay","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","melodyPart","handleBassValueChange","property","value","oscillator","type","envelope","attack","decay","sustain","release","volume","setState","handleMelodyValueChange","wet","render"],"sources":["/Users/mar/Share/sea/app/javascript/prototypes/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass.js'\nimport * as melodySettings from './tunes/melody.js'\n\nimport ToneSynth from './modules/MainTune.jsx'\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\n\nlet bassSynth\nlet bassChorus\nlet bassPingPongDelay\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bassSettings,\n      melodySettings\n    }\n  }\n\n  handleEnd = () => {\n    Tone.Transport.stop()\n  }\n\n  handleStart = () => {\n    const { melodySettings, bassSettings  } = this.state\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassChorus = new Tone.Chorus(bassSettings.chorus).start()\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    bassSynth.chain(bassChorus, bassPingPongDelay)\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = true\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = true\n    //\n    //\n\n    Tone.Transport.start()\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'synthVolume') {\n      bassSynth.volume.value = value\n      bassSettings.synth.volume = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'synthVolume') {\n      bassSynth.volume.value = value\n      bassSettings.synth.volume = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  render() {\n    const { bassSettings, melodySettings } = this.state\n\n    return (\n      <div className=\"Container\">\n        <div className=\"controls\">\n          <SC_Button\n            text=\"▶\"\n            handleClick={this.handleStart}\n          />\n          <SC_Button\n            text=\"■\"\n            handleClick={this.handleEnd}\n          />\n        </div>\n\n      <div className=\"melodies\">\n        <ToneSynth\n          settings={bassSettings}\n          handleValueChange={this.handleBassValueChange}\n        />\n        <ToneSynth\n          settings={melodySettings}\n          handleValueChange={this.handleMelodyValueChange}\n        />\n      </div>\n      </div>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}