{"ast":null,"code":"import React, { Component } from 'react';\nimport * as Tone from 'tone';\nimport * as firstSettings from '../tunes/firstDrum.js';\nimport SC_Button from '../components/SC_Button';\nimport SC_ToggleButtonSet from '../components/SC_ToggleButtonSet.jsx';\nlet firstSynth;\nexport default class Drums extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDrumsStart = () => {\n      const firstSettings = this.state.firstSettings;\n      //\n      firstSynth = new Tone.Synth(firstSettings.synth);\n      const firstPart = new Tone.Part((time, note) => {\n        firstSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, firstSettings.sequence.steps).start(0);\n      firstPart.loopEnd = firstSettings.sequence.duration;\n      firstPart.loop = true;\n      const channelFirstSettings = {\n        volume: 0,\n        pan: 0,\n        mute: false,\n        solo: false\n      };\n      const channelFirst = new Tone.Channel(channelFirstSettings).toDestination();\n      firstSynth.chain(channelFirst);\n      Tone.Transport.start();\n    };\n    this.handleMute = (property, value) => {\n      const channelFirstSettings = this.state.channelFirstSettings;\n      if (property === 'synthType') {\n        channelFirstSettings.mute = Boolean;\n        bassSettings.synth.oscillator.type = value;\n      }\n      this.setState({\n        channelFirstSettings\n      });\n    };\n    this.state = {\n      firstSettings\n    };\n  }\n  render() {\n    // const text = this.props.settings.title\n    const _this$props = this.props,\n      settings = _this$props.settings,\n      handleValueChange = _this$props.handleValueChange;\n    const optionsDrum = ['muted', 'playing'];\n    const firstSettings = this.state.firstSettings;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Drums\"\n    }, /*#__PURE__*/React.createElement(SC_Button, {\n      text: \"\\u25B6\",\n      handleClick: this.handleDrumsStart\n    }), /*#__PURE__*/React.createElement(SC_ToggleButtonSet, {\n      name: \"Wave\",\n      options: optionsDrum,\n      value: settings.synth.oscillator.type,\n      property: \"synthMute\",\n      handleChange: handleMute\n    }));\n  }\n}","map":{"version":3,"names":["React","Component","Tone","firstSettings","SC_Button","SC_ToggleButtonSet","firstSynth","Drums","constructor","props","handleDrumsStart","state","Synth","synth","firstPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","start","loopEnd","loop","channelFirstSettings","volume","pan","mute","solo","channelFirst","Channel","toDestination","chain","Transport","handleMute","property","value","Boolean","bassSettings","oscillator","type","setState","render","settings","handleValueChange","optionsDrum"],"sources":["/Users/mar/Share/sea/app/javascript/prototypes/modules/Drums.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport * as Tone from 'tone'\nimport * as firstSettings from '../tunes/firstDrum.js'\nimport SC_Button from '../components/SC_Button'\nimport SC_ToggleButtonSet from '../components/SC_ToggleButtonSet.jsx'\n\nlet firstSynth\n\nexport default class Drums extends Component {\n    constructor(props) {\n      super(props)\n  \n      this.state = {\n        firstSettings\n      }\n    }\n  \n    handleDrumsStart = () => {\n        const { firstSettings } = this.state\n        //\n        firstSynth = new Tone.Synth(firstSettings.synth)\n    \n        const firstPart = new Tone.Part((time, note) => {\n          firstSynth.triggerAttackRelease(\n            note.noteName,\n            note.duration,\n            time,\n            note.velocity\n          )\n        }, firstSettings.sequence.steps).start(0)\n    \n        firstPart.loopEnd = firstSettings.sequence.duration\n        firstPart.loop = true\n\n        const channelFirstSettings = { volume: 0, pan: 0, mute: false, solo: false }\n        const channelFirst = new Tone.Channel(channelFirstSettings).toDestination()\n        firstSynth.chain(channelFirst)\n        \n        Tone.Transport.start()\n      }\n\n      handleMute = (property, value) => {\n        const { channelFirstSettings } = this.state\n    \n        if (property === 'synthType') {\n            channelFirstSettings.mute = Boolean\n          bassSettings.synth.oscillator.type = value\n        }\n    \n        this.setState({\n            channelFirstSettings\n        })\n      }\n    \n  \n    render(){\n        // const text = this.props.settings.title\n        const { settings, handleValueChange } = this.props\n        const optionsDrum = ['muted', 'playing']\n        const { firstSettings } = this.state\n\n      return (\n        <div className=\"Drums\">\n        <SC_Button\n            text=\"â–¶\"\n            handleClick={this.handleDrumsStart}\n          />\n          <SC_ToggleButtonSet\n          name=\"Wave\"\n          options={optionsDrum}\n          value={settings.synth.oscillator.type}\n          property=\"synthMute\"\n          handleChange={handleMute}\n        />\n        </div>\n      )\n\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,OAAO,KAAKC,aAAa,MAAM,uBAAuB;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,kBAAkB,MAAM,sCAAsC;AAErE,IAAIC,UAAU;AAEd,eAAe,MAAMC,KAAK,SAASN,SAAS,CAAC;EACzCO,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAA,KAOdC,gBAAgB,GAAG,MAAM;MACrB,MAAQP,aAAa,GAAK,IAAI,CAACQ,KAAK,CAA5BR,aAAa;MACrB;MACAG,UAAU,GAAG,IAAIJ,IAAI,CAACU,KAAK,CAACT,aAAa,CAACU,KAAK,CAAC;MAEhD,MAAMC,SAAS,GAAG,IAAIZ,IAAI,CAACa,IAAI,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;QAC9CX,UAAU,CAACY,oBAAoB,CAC7BD,IAAI,CAACE,QAAQ,EACbF,IAAI,CAACG,QAAQ,EACbJ,IAAI,EACJC,IAAI,CAACI,QAAQ,CACd;MACH,CAAC,EAAElB,aAAa,CAACmB,QAAQ,CAACC,KAAK,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;MAEzCV,SAAS,CAACW,OAAO,GAAGtB,aAAa,CAACmB,QAAQ,CAACF,QAAQ;MACnDN,SAAS,CAACY,IAAI,GAAG,IAAI;MAErB,MAAMC,oBAAoB,GAAG;QAAEC,MAAM,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAM,CAAC;MAC5E,MAAMC,YAAY,GAAG,IAAI9B,IAAI,CAAC+B,OAAO,CAACN,oBAAoB,CAAC,CAACO,aAAa,EAAE;MAC3E5B,UAAU,CAAC6B,KAAK,CAACH,YAAY,CAAC;MAE9B9B,IAAI,CAACkC,SAAS,CAACZ,KAAK,EAAE;IACxB,CAAC;IAAA,KAEDa,UAAU,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAChC,MAAQZ,oBAAoB,GAAK,IAAI,CAAChB,KAAK,CAAnCgB,oBAAoB;MAE5B,IAAIW,QAAQ,KAAK,WAAW,EAAE;QAC1BX,oBAAoB,CAACG,IAAI,GAAGU,OAAO;QACrCC,YAAY,CAAC5B,KAAK,CAAC6B,UAAU,CAACC,IAAI,GAAGJ,KAAK;MAC5C;MAEA,IAAI,CAACK,QAAQ,CAAC;QACVjB;MACJ,CAAC,CAAC;IACJ,CAAC;IAxCD,IAAI,CAAChB,KAAK,GAAG;MACXR;IACF,CAAC;EACH;EAwCA0C,MAAM,GAAE;IACJ;IACA,oBAAwC,IAAI,CAACpC,KAAK;MAA1CqC,QAAQ,eAARA,QAAQ;MAAEC,iBAAiB,eAAjBA,iBAAiB;IACnC,MAAMC,WAAW,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC;IACxC,MAAQ7C,aAAa,GAAK,IAAI,CAACQ,KAAK,CAA5BR,aAAa;IAEvB,oBACE;MAAK,SAAS,EAAC;IAAO,gBACtB,oBAAC,SAAS;MACN,IAAI,EAAC,QAAG;MACR,WAAW,EAAE,IAAI,CAACO;IAAiB,EACnC,eACF,oBAAC,kBAAkB;MACnB,IAAI,EAAC,MAAM;MACX,OAAO,EAAEsC,WAAY;MACrB,KAAK,EAAEF,QAAQ,CAACjC,KAAK,CAAC6B,UAAU,CAACC,IAAK;MACtC,QAAQ,EAAC,WAAW;MACpB,YAAY,EAAEN;IAAW,EACzB,CACI;EAGV;AACJ"},"metadata":{},"sourceType":"module"}