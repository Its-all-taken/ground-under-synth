{"ast":null,"code":"import * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as seaSettings from './tunes/sea.js';\nimport * as melodySettings from './tunes/beat.js';\nimport ToneSynth from './modules/MainTune.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nlet seaSynth;\nlet seaChorus;\nlet seaPingPongDelay;\nlet melodySynth;\nlet melodyChorus;\nlet melodyPingPongDelay;\nexport default class Container extends Component {\n  constructor(props) {\n    super(props);\n    this.handleStart = () => {\n      const _this$state = this.state,\n        bassSettings = _this$state.bassSettings,\n        melodySettings = _this$state.melodySettings;\n      //\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassChorus = new Tone.Chorus(bassSettings.chorus).start();\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      bassSynth.chain(bassChorus, bassPingPongDelay);\n      const bassPart = new Tone.Part((time, note) => {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = true;\n      //\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay);\n      const melodyPart = new Tone.Part((time, note) => {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = true;\n      //\n      //\n\n      Tone.Transport.start();\n    };\n    this.handleBassValueChange = (property, value) => {\n      const bassSettings = this.state.bassSettings;\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        bassPingPongDelay.wet.value = value;\n        bassSettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        bassChorus.wet.value = value;\n        bassSettings.chorus.wet = value;\n      }\n      this.setState({\n        bassSettings\n      });\n    };\n    this.handleMelodyValueChange = (property, value) => {\n      const melodySettings = this.state.melodySettings;\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      }\n      this.setState({\n        melodySettings\n      });\n    };\n    this.state = {\n      bassSettings,\n      melodySettings\n    };\n  }\n  render() {\n    const _this$state2 = this.state,\n      bassSettings = _this$state2.bassSettings,\n      melodySettings = _this$state2.melodySettings;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\"\n    }, /*#__PURE__*/React.createElement(SC_Button, {\n      text: \"melody\",\n      handleClick: this.handleStart\n    }), /*#__PURE__*/React.createElement(ToneSynth, {\n      settings: bassSettings,\n      handleValueChange: this.handleBassValueChange\n    }), /*#__PURE__*/React.createElement(ToneSynth, {\n      settings: melodySettings,\n      handleValueChange: this.handleMelodyValueChange\n    }));\n  }\n}","map":{"version":3,"names":["Tone","React","Component","seaSettings","melodySettings","ToneSynth","SC_Button","SC_Slider","seaSynth","seaChorus","seaPingPongDelay","melodySynth","melodyChorus","melodyPingPongDelay","Container","constructor","props","handleStart","state","bassSettings","bassSynth","Synth","synth","bassChorus","Chorus","chorus","start","bassPingPongDelay","PingPongDelay","pingPongDelay","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","melodyPart","Transport","handleBassValueChange","property","value","oscillator","type","envelope","attack","decay","sustain","release","wet","setState","handleMelodyValueChange","render"],"sources":["/Users/mar/Share/sea/app/javascript/prototypes/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as seaSettings from './tunes/sea.js'\nimport * as melodySettings from './tunes/beat.js'\n\nimport ToneSynth from './modules/MainTune.jsx'\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\n\nlet seaSynth\nlet seaChorus\nlet seaPingPongDelay\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bassSettings,\n      melodySettings\n    }\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings } = this.state\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassChorus = new Tone.Chorus(bassSettings.chorus).start()\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    bassSynth.chain(bassChorus, bassPingPongDelay)\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = true\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = true\n    //\n    //\n\n    Tone.Transport.start()\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      bassPingPongDelay.wet.value = value\n      bassSettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      bassChorus.wet.value = value\n      bassSettings.chorus.wet = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  render() {\n    const { bassSettings, melodySettings } = this.state\n\n    return (\n      <div className=\"Container\">\n        <SC_Button\n          text=\"melody\"\n          handleClick={this.handleStart}\n        />\n\n        <ToneSynth\n          settings={bassSettings}\n          handleValueChange={this.handleBassValueChange}\n        />\n\n        <ToneSynth\n          settings={melodySettings}\n          handleValueChange={this.handleMelodyValueChange}\n        />\n\n      </div>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}