{"ast":null,"code":"// import * as Tone from 'tone'\n// import React, { Component } from 'react'\n\n// import * as seaSettings from './tunes/sea.js'\n// import * as beatSettings from './tunes/beat.js'\n\n// import SC_Button from './components/SC_Button'\n\n// let seaSynth\n// let seaChorus\n// let seaPingPongDelay\n\n// let beatSynth\n\n// export default class Container extends Component {\n//   constructor(props) {\n//     super(props)\n\n//     this.state = {\n//       seaSettings,\n//       beatSettings\n//     }\n//   }\n\n//   handleStart = () => {\n//     const { seaSettings } = this.state\n//     //\n//     seaSynth = new Tone.Synth(seaSettings.synth)\n//     seaChorus = new Tone.Chorus(seaSettings.chorus).start()\n//     seaPingPongDelay = new Tone.PingPongDelay(\n//       seaSettings.pingPongDelay\n//     ).toDestination()\n//     seaSynth.chain(seaChorus, seaPingPongDelay)\n//     const seaPart = new Tone.Part((time, note) => {\n//       seaSynth.triggerAttackRelease(\n//         note.noteName,\n//         note.duration,\n//         time,\n//         note.velocity\n//       )\n//     }, seaSettings.sequence.steps).start(0)\n//     seaPart.loopEnd = seaSettings.sequence.duration\n//     seaPart.loop = true\n//     Tone.Transport.start()\n//   }\n\n//   handleBeatStart = () => {\n//     const { beatSettings } = this.state\n//     //\n//     beatSynth = new Tone.Synth(beatSettings.synth)\n//     // beatChorus = new Tone.Chorus(beatSettings.chorus).start()\n//     // beatSynth.chain(beatChorus)\n//     const beatPart = new Tone.Part((time, note) => {\n//       beatSynth.triggerAttackRelease(\n//         note.noteName,\n//         note.duration,\n//         time,\n//         note.velocity\n//       )\n//     }, beatSettings.sequence.steps).start(0)\n//     beatPart.loopEnd = beatSettings.sequence.duration\n//     beatPart.loop = true\n//     Tone.Transport.start()\n//   }\n\n//   render() {\n//     const { seaSettings, beatSettings } = this.state\n\n//     return (\n//       <div className=\"Container\">\n//         <SC_Button\n//           text=\">start<\"\n//           handleClick={this.handleStart}\n//         />\n//         <SC_Button\n//           text=\">beat<\"\n//           handleClick={this.handleBeatStart}\n//         />\n//       </div>\n//     )\n//   }\n// }\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/sea.js';\nimport * as melodySettings from './tunes/beat.js';\nimport ToneSynth from './modules/MainTune.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nlet bassSynth;\nlet bassChorus;\nlet bassPingPongDelay;\nlet melodySynth;\nlet melodyChorus;\nlet melodyPingPongDelay;\nexport default class Container extends Component {\n  constructor(props) {\n    super(props);\n    this.handleStart = () => {\n      const _this$state = this.state,\n        bassSettings = _this$state.bassSettings,\n        melodySettings = _this$state.melodySettings;\n\n      //\n      //\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassChorus = new Tone.Chorus(bassSettings.chorus).start();\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      bassSynth.chain(bassChorus, bassPingPongDelay);\n      const bassPart = new Tone.Part((time, note) => {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = true;\n      //\n      //\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay);\n      const melodyPart = new Tone.Part((time, note) => {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = true;\n      //\n      //\n\n      Tone.Transport.start();\n    };\n    this.handleBassValueChange = (property, value) => {\n      const bassSettings = this.state.bassSettings;\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        bassPingPongDelay.wet.value = value;\n        bassSettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        bassChorus.wet.value = value;\n        bassSettings.chorus.wet = value;\n      }\n      this.setState({\n        bassSettings\n      });\n    };\n    this.handleMelodyValueChange = (property, value) => {\n      const melodySettings = this.state.melodySettings;\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      }\n      this.setState({\n        melodySettings\n      });\n    };\n    this.state = {\n      bassSettings,\n      melodySettings\n    };\n  }\n  render() {\n    const _this$state2 = this.state,\n      bassSettings = _this$state2.bassSettings,\n      melodySettings = _this$state2.melodySettings;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\"\n    }, /*#__PURE__*/React.createElement(SC_Button, {\n      text: \"Art Design & Coding Community\",\n      handleClick: this.handleStart\n    }), /*#__PURE__*/React.createElement(ToneSynth, {\n      settings: bassSettings,\n      handleValueChange: this.handleBassValueChange\n    }), /*#__PURE__*/React.createElement(ToneSynth, {\n      settings: melodySettings,\n      handleValueChange: this.handleMelodyValueChange\n    }));\n  }\n}","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","ToneSynth","SC_Button","SC_Slider","bassSynth","bassChorus","bassPingPongDelay","melodySynth","melodyChorus","melodyPingPongDelay","Container","constructor","props","handleStart","state","Synth","synth","Chorus","chorus","start","PingPongDelay","pingPongDelay","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","melodyPart","Transport","handleBassValueChange","property","value","oscillator","type","envelope","attack","decay","sustain","release","wet","setState","handleMelodyValueChange","render"],"sources":["/Users/mar/Share/sea/app/javascript/prototypes/Container.jsx"],"sourcesContent":["// import * as Tone from 'tone'\n// import React, { Component } from 'react'\n\n// import * as seaSettings from './tunes/sea.js'\n// import * as beatSettings from './tunes/beat.js'\n\n// import SC_Button from './components/SC_Button'\n\n// let seaSynth\n// let seaChorus\n// let seaPingPongDelay\n\n// let beatSynth\n\n// export default class Container extends Component {\n//   constructor(props) {\n//     super(props)\n\n//     this.state = {\n//       seaSettings,\n//       beatSettings\n//     }\n//   }\n\n//   handleStart = () => {\n//     const { seaSettings } = this.state\n//     //\n//     seaSynth = new Tone.Synth(seaSettings.synth)\n//     seaChorus = new Tone.Chorus(seaSettings.chorus).start()\n//     seaPingPongDelay = new Tone.PingPongDelay(\n//       seaSettings.pingPongDelay\n//     ).toDestination()\n//     seaSynth.chain(seaChorus, seaPingPongDelay)\n//     const seaPart = new Tone.Part((time, note) => {\n//       seaSynth.triggerAttackRelease(\n//         note.noteName,\n//         note.duration,\n//         time,\n//         note.velocity\n//       )\n//     }, seaSettings.sequence.steps).start(0)\n//     seaPart.loopEnd = seaSettings.sequence.duration\n//     seaPart.loop = true\n//     Tone.Transport.start()\n//   }\n\n//   handleBeatStart = () => {\n//     const { beatSettings } = this.state\n//     //\n//     beatSynth = new Tone.Synth(beatSettings.synth)\n//     // beatChorus = new Tone.Chorus(beatSettings.chorus).start()\n//     // beatSynth.chain(beatChorus)\n//     const beatPart = new Tone.Part((time, note) => {\n//       beatSynth.triggerAttackRelease(\n//         note.noteName,\n//         note.duration,\n//         time,\n//         note.velocity\n//       )\n//     }, beatSettings.sequence.steps).start(0)\n//     beatPart.loopEnd = beatSettings.sequence.duration\n//     beatPart.loop = true\n//     Tone.Transport.start()\n//   }\n \n//   render() {\n//     const { seaSettings, beatSettings } = this.state\n\n//     return (\n//       <div className=\"Container\">\n//         <SC_Button\n//           text=\">start<\"\n//           handleClick={this.handleStart}\n//         />\n//         <SC_Button\n//           text=\">beat<\"\n//           handleClick={this.handleBeatStart}\n//         />\n//       </div>\n//     )\n//   }\n// }\nimport * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/sea.js'\nimport * as melodySettings from './tunes/beat.js'\n\nimport ToneSynth from './modules/MainTune.jsx'\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\n\nlet bassSynth\nlet bassChorus\nlet bassPingPongDelay\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bassSettings,\n      melodySettings\n    }\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings } = this.state\n\n    //\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassChorus = new Tone.Chorus(bassSettings.chorus).start()\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    bassSynth.chain(bassChorus, bassPingPongDelay)\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = true\n    //\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = true\n    //\n    //\n\n    Tone.Transport.start()\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      bassPingPongDelay.wet.value = value\n      bassSettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      bassChorus.wet.value = value\n      bassSettings.chorus.wet = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  render() {\n    const { bassSettings, melodySettings } = this.state\n\n    return (\n      <div className=\"Container\">\n        <SC_Button\n          text=\"Art Design & Coding Community\"\n          handleClick={this.handleStart}\n        />\n\n        <ToneSynth\n          settings={bassSettings}\n          handleValueChange={this.handleBassValueChange}\n        />\n\n        <ToneSynth\n          settings={melodySettings}\n          handleValueChange={this.handleMelodyValueChange}\n        />\n\n      </div>\n    )\n  }\n}"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,IAAI,MAAM,MAAM;AAC5B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAO,KAAKC,YAAY,MAAM,gBAAgB;AAC9C,OAAO,KAAKC,cAAc,MAAM,iBAAiB;AAEjD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAE9C,IAAIC,SAAS;AACb,IAAIC,UAAU;AACd,IAAIC,iBAAiB;AAErB,IAAIC,WAAW;AACf,IAAIC,YAAY;AAChB,IAAIC,mBAAmB;AAEvB,eAAe,MAAMC,SAAS,SAASZ,SAAS,CAAC;EAC/Ca,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAA,KAQdC,WAAW,GAAG,MAAM;MAClB,oBAAyC,IAAI,CAACC,KAAK;QAA3Cf,YAAY,eAAZA,YAAY;QAAEC,cAAc,eAAdA,cAAc;;MAEpC;MACA;MACAI,SAAS,GAAG,IAAIR,IAAI,CAACmB,KAAK,CAAChB,YAAY,CAACiB,KAAK,CAAC;MAC9CX,UAAU,GAAG,IAAIT,IAAI,CAACqB,MAAM,CAAClB,YAAY,CAACmB,MAAM,CAAC,CAACC,KAAK,EAAE;MAEzDb,iBAAiB,GAAG,IAAIV,IAAI,CAACwB,aAAa,CACxCrB,YAAY,CAACsB,aAAa,CAC3B,CAACC,aAAa,EAAE;MAEjBlB,SAAS,CAACmB,KAAK,CAAClB,UAAU,EAAEC,iBAAiB,CAAC;MAE9C,MAAMkB,QAAQ,GAAG,IAAI5B,IAAI,CAAC6B,IAAI,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;QAC7CvB,SAAS,CAACwB,oBAAoB,CAC5BD,IAAI,CAACE,QAAQ,EACbF,IAAI,CAACG,QAAQ,EACbJ,IAAI,EACJC,IAAI,CAACI,QAAQ,CACd;MACH,CAAC,EAAEhC,YAAY,CAACiC,QAAQ,CAACC,KAAK,CAAC,CAACd,KAAK,CAAC,CAAC,CAAC;MAExCK,QAAQ,CAACU,OAAO,GAAGnC,YAAY,CAACiC,QAAQ,CAACF,QAAQ;MACjDN,QAAQ,CAACW,IAAI,GAAG,IAAI;MACpB;MACA;MACA5B,WAAW,GAAG,IAAIX,IAAI,CAACmB,KAAK,CAACf,cAAc,CAACgB,KAAK,CAAC;MAClDR,YAAY,GAAG,IAAIZ,IAAI,CAACqB,MAAM,CAACjB,cAAc,CAACkB,MAAM,CAAC,CAACC,KAAK,EAAE;MAE7DV,mBAAmB,GAAG,IAAIb,IAAI,CAACwB,aAAa,CAC1CpB,cAAc,CAACqB,aAAa,CAC7B,CAACC,aAAa,EAAE;MAEjBf,WAAW,CAACgB,KAAK,CAACf,YAAY,EAAEC,mBAAmB,CAAC;MAEpD,MAAM2B,UAAU,GAAG,IAAIxC,IAAI,CAAC6B,IAAI,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;QAC/CpB,WAAW,CAACqB,oBAAoB,CAC9BD,IAAI,CAACE,QAAQ,EACbF,IAAI,CAACG,QAAQ,EACbJ,IAAI,EACJC,IAAI,CAACI,QAAQ,CACd;MACH,CAAC,EAAE/B,cAAc,CAACgC,QAAQ,CAACC,KAAK,CAAC,CAACd,KAAK,CAAC,CAAC,CAAC;MAE1CiB,UAAU,CAACF,OAAO,GAAGlC,cAAc,CAACgC,QAAQ,CAACF,QAAQ;MACrDM,UAAU,CAACD,IAAI,GAAG,IAAI;MACtB;MACA;;MAEAvC,IAAI,CAACyC,SAAS,CAAClB,KAAK,EAAE;IACxB,CAAC;IAAA,KAEDmB,qBAAqB,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAC3C,MAAQzC,YAAY,GAAK,IAAI,CAACe,KAAK,CAA3Bf,YAAY;MAEpB,IAAIwC,QAAQ,KAAK,WAAW,EAAE;QAC5BnC,SAAS,CAACqC,UAAU,CAACC,IAAI,GAAGF,KAAK;QACjCzC,YAAY,CAACiB,KAAK,CAACyB,UAAU,CAACC,IAAI,GAAGF,KAAK;MAC5C,CAAC,MAAM,IAAID,QAAQ,KAAK,qBAAqB,EAAE;QAC7CnC,SAAS,CAACuC,QAAQ,CAACC,MAAM,GAAGJ,KAAK;QACjCzC,YAAY,CAACiB,KAAK,CAAC2B,QAAQ,CAACC,MAAM,GAAGJ,KAAK;MAC5C,CAAC,MAAM,IAAID,QAAQ,KAAK,oBAAoB,EAAE;QAC5CnC,SAAS,CAACuC,QAAQ,CAACE,KAAK,GAAGL,KAAK;QAChCzC,YAAY,CAACiB,KAAK,CAAC2B,QAAQ,CAACE,KAAK,GAAGL,KAAK;MAC3C,CAAC,MAAM,IAAID,QAAQ,KAAK,sBAAsB,EAAE;QAC9CnC,SAAS,CAACuC,QAAQ,CAACG,OAAO,GAAGN,KAAK;QAClCzC,YAAY,CAACiB,KAAK,CAAC2B,QAAQ,CAACG,OAAO,GAAGN,KAAK;MAC7C,CAAC,MAAM,IAAID,QAAQ,KAAK,sBAAsB,EAAE;QAC9CnC,SAAS,CAACuC,QAAQ,CAACI,OAAO,GAAGP,KAAK;QAClCzC,YAAY,CAACiB,KAAK,CAAC2B,QAAQ,CAACI,OAAO,GAAGP,KAAK;MAC7C,CAAC,MAAM,IAAID,QAAQ,KAAK,kBAAkB,EAAE;QAC1CjC,iBAAiB,CAAC0C,GAAG,CAACR,KAAK,GAAGA,KAAK;QACnCzC,YAAY,CAACsB,aAAa,CAAC2B,GAAG,GAAGR,KAAK;MACxC,CAAC,MAAM,IAAID,QAAQ,KAAK,WAAW,EAAE;QACnClC,UAAU,CAAC2C,GAAG,CAACR,KAAK,GAAGA,KAAK;QAC5BzC,YAAY,CAACmB,MAAM,CAAC8B,GAAG,GAAGR,KAAK;MACjC;MAEA,IAAI,CAACS,QAAQ,CAAC;QACZlD;MACF,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDmD,uBAAuB,GAAG,CAACX,QAAQ,EAAEC,KAAK,KAAK;MAC7C,MAAQxC,cAAc,GAAK,IAAI,CAACc,KAAK,CAA7Bd,cAAc;MAEtB,IAAIuC,QAAQ,KAAK,WAAW,EAAE;QAC5BhC,WAAW,CAACkC,UAAU,CAACC,IAAI,GAAGF,KAAK;QACnCxC,cAAc,CAACgB,KAAK,CAACyB,UAAU,CAACC,IAAI,GAAGF,KAAK;MAC9C,CAAC,MAAM,IAAID,QAAQ,KAAK,qBAAqB,EAAE;QAC7ChC,WAAW,CAACoC,QAAQ,CAACC,MAAM,GAAGJ,KAAK;QACnCxC,cAAc,CAACgB,KAAK,CAAC2B,QAAQ,CAACC,MAAM,GAAGJ,KAAK;MAC9C,CAAC,MAAM,IAAID,QAAQ,KAAK,oBAAoB,EAAE;QAC5ChC,WAAW,CAACoC,QAAQ,CAACE,KAAK,GAAGL,KAAK;QAClCxC,cAAc,CAACgB,KAAK,CAAC2B,QAAQ,CAACE,KAAK,GAAGL,KAAK;MAC7C,CAAC,MAAM,IAAID,QAAQ,KAAK,sBAAsB,EAAE;QAC9ChC,WAAW,CAACoC,QAAQ,CAACG,OAAO,GAAGN,KAAK;QACpCxC,cAAc,CAACgB,KAAK,CAAC2B,QAAQ,CAACG,OAAO,GAAGN,KAAK;MAC/C,CAAC,MAAM,IAAID,QAAQ,KAAK,sBAAsB,EAAE;QAC9ChC,WAAW,CAACoC,QAAQ,CAACI,OAAO,GAAGP,KAAK;QACpCxC,cAAc,CAACgB,KAAK,CAAC2B,QAAQ,CAACI,OAAO,GAAGP,KAAK;MAC/C,CAAC,MAAM,IAAID,QAAQ,KAAK,kBAAkB,EAAE;QAC1C9B,mBAAmB,CAACuC,GAAG,CAACR,KAAK,GAAGA,KAAK;QACrCxC,cAAc,CAACqB,aAAa,CAAC2B,GAAG,GAAGR,KAAK;MAC1C,CAAC,MAAM,IAAID,QAAQ,KAAK,WAAW,EAAE;QACnC/B,YAAY,CAACwC,GAAG,CAACR,KAAK,GAAGA,KAAK;QAC9BxC,cAAc,CAACkB,MAAM,CAAC8B,GAAG,GAAGR,KAAK;MACnC;MAEA,IAAI,CAACS,QAAQ,CAAC;QACZjD;MACF,CAAC,CAAC;IACJ,CAAC;IAvHC,IAAI,CAACc,KAAK,GAAG;MACXf,YAAY;MACZC;IACF,CAAC;EACH;EAqHAmD,MAAM,GAAG;IACP,qBAAyC,IAAI,CAACrC,KAAK;MAA3Cf,YAAY,gBAAZA,YAAY;MAAEC,cAAc,gBAAdA,cAAc;IAEpC,oBACE;MAAK,SAAS,EAAC;IAAW,gBACxB,oBAAC,SAAS;MACR,IAAI,EAAC,+BAA+B;MACpC,WAAW,EAAE,IAAI,CAACa;IAAY,EAC9B,eAEF,oBAAC,SAAS;MACR,QAAQ,EAAEd,YAAa;MACvB,iBAAiB,EAAE,IAAI,CAACuC;IAAsB,EAC9C,eAEF,oBAAC,SAAS;MACR,QAAQ,EAAEtC,cAAe;MACzB,iBAAiB,EAAE,IAAI,CAACkD;IAAwB,EAChD,CAEE;EAEV;AACF"},"metadata":{},"sourceType":"module"}