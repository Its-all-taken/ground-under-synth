{"ast":null,"code":"import * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as seaSettings from './tunes/sea.js';\nimport * as melodySettings from './tunes/beat.js';\nimport MainTune from './modules/MainTune.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nlet seaSynth;\nlet seaChorus;\nlet seaPingPongDelay;\nlet melodySynth;\nlet melodyChorus;\nlet melodyPingPongDelay;\nexport default class Container extends Component {\n  constructor(props) {\n    super(props);\n    this.handleStart = () => {\n      const _this$state = this.state,\n        seaSettings = _this$state.seaSettings,\n        melodySettings = _this$state.melodySettings;\n      //\n      seaSynth = new Tone.Synth(seaSettings.synth);\n      seaChorus = new Tone.Chorus(seaSettings.chorus).start();\n      seaPingPongDelay = new Tone.PingPongDelay(seaSettings.pingPongDelay).toDestination();\n      seaSynth.chain(seaChorus, seaPingPongDelay);\n      const bassPart = new Tone.Part((time, note) => {\n        seaSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, seaSettings.sequence.steps).start(0);\n      seaPart.loopEnd = seaSettings.sequence.duration;\n      seaPart.loop = true;\n      //\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay);\n      const melodyPart = new Tone.Part((time, note) => {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = true;\n      //\n      //\n\n      Tone.Transport.start();\n    };\n    this.handleBassValueChange = (property, value) => {\n      const bassSettings = this.state.bassSettings;\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        bassPingPongDelay.wet.value = value;\n        bassSettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        bassChorus.wet.value = value;\n        bassSettings.chorus.wet = value;\n      }\n      this.setState({\n        bassSettings\n      });\n    };\n    this.handleMelodyValueChange = (property, value) => {\n      const melodySettings = this.state.melodySettings;\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      }\n      this.setState({\n        melodySettings\n      });\n    };\n    this.state = {\n      seaSettings,\n      melodySettings\n    };\n  }\n  render() {\n    const _this$state2 = this.state,\n      bassSettings = _this$state2.bassSettings,\n      melodySettings = _this$state2.melodySettings;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\"\n    }, /*#__PURE__*/React.createElement(SC_Button, {\n      text: \"melody\",\n      handleClick: this.handleStart\n    }), /*#__PURE__*/React.createElement(ToneSynth, {\n      settings: bassSettings,\n      handleValueChange: this.handleBassValueChange\n    }), /*#__PURE__*/React.createElement(ToneSynth, {\n      settings: melodySettings,\n      handleValueChange: this.handleMelodyValueChange\n    }));\n  }\n}","map":{"version":3,"names":["Tone","React","Component","seaSettings","melodySettings","MainTune","SC_Button","SC_Slider","seaSynth","seaChorus","seaPingPongDelay","melodySynth","melodyChorus","melodyPingPongDelay","Container","constructor","props","handleStart","state","Synth","synth","Chorus","chorus","start","PingPongDelay","pingPongDelay","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","seaPart","loopEnd","loop","melodyPart","Transport","handleBassValueChange","property","value","bassSettings","bassSynth","oscillator","type","envelope","attack","decay","sustain","release","bassPingPongDelay","wet","bassChorus","setState","handleMelodyValueChange","render"],"sources":["/Users/mar/Share/sea/app/javascript/prototypes/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as seaSettings from './tunes/sea.js'\nimport * as melodySettings from './tunes/beat.js'\n\nimport MainTune from './modules/MainTune.jsx'\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\n\nlet seaSynth\nlet seaChorus\nlet seaPingPongDelay\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      seaSettings,\n      melodySettings\n    }\n  }\n\n  handleStart = () => {\n    const { seaSettings, melodySettings } = this.state\n    //\n    seaSynth = new Tone.Synth(seaSettings.synth)\n    seaChorus = new Tone.Chorus(seaSettings.chorus).start()\n\n    seaPingPongDelay = new Tone.PingPongDelay(\n      seaSettings.pingPongDelay\n    ).toDestination()\n\n    seaSynth.chain(seaChorus, seaPingPongDelay)\n\n    const bassPart = new Tone.Part((time, note) => {\n      seaSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, seaSettings.sequence.steps).start(0)\n\n    seaPart.loopEnd = seaSettings.sequence.duration\n    seaPart.loop = true\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = true\n    //\n    //\n\n    Tone.Transport.start()\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      bassPingPongDelay.wet.value = value\n      bassSettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      bassChorus.wet.value = value\n      bassSettings.chorus.wet = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  render() {\n    const { bassSettings, melodySettings } = this.state\n\n    return (\n      <div className=\"Container\">\n        <SC_Button\n          text=\"melody\"\n          handleClick={this.handleStart}\n        />\n\n        <ToneSynth\n          settings={bassSettings}\n          handleValueChange={this.handleBassValueChange}\n        />\n\n        <ToneSynth\n          settings={melodySettings}\n          handleValueChange={this.handleMelodyValueChange}\n        />\n\n      </div>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}