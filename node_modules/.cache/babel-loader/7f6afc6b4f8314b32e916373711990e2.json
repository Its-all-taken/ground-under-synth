{"ast":null,"code":"import * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass.js';\nimport * as firstSettings from './tunes/firstDrum.js';\nimport * as melodySettings from './tunes/melody.js';\nimport Drums from './modules/Drums.jsx';\nimport ToneSynth from './modules/MainTune.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nlet bassSynth;\nlet bassChorus;\nlet bassPingPongDelay;\nlet firstSynth;\nlet melodySynth;\nlet melodyChorus;\nlet melodyPingPongDelay;\nexport default class Container extends Component {\n  constructor(props) {\n    super(props);\n    this.handleEnd = () => {\n      Tone.Transport.stop();\n    };\n    this.handleStart = () => {\n      const _this$state = this.state,\n        melodySettings = _this$state.melodySettings,\n        bassSettings = _this$state.bassSettings,\n        firstSettings = _this$state.firstSettings;\n      //\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassChorus = new Tone.Chorus(bassSettings.chorus).start();\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      bassSynth.chain(bassChorus, bassPingPongDelay);\n      const bassPart = new Tone.Part((time, note) => {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = true;\n      //\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay);\n      const melodyPart = new Tone.Part((time, note) => {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = true;\n      //\n      firstSynth = new Tone.Synth(firstSettings.synth);\n      const firstPart = new Tone.Part((time, note) => {\n        firstSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, firstSettings.sequence.steps).start(0);\n      firstPart.loopEnd = firstSettings.sequence.duration;\n      firstPart.loop = true;\n      const channelFirstSettings = {\n        volume: 0,\n        pan: 0,\n        mute: false,\n        solo: false\n      };\n      const channelFirst = new Tone.Channel(channelFirstSettings).toDestination();\n      firstSynth.chain(channelFirst);\n      //\n\n      Tone.Transport.start();\n    };\n    this.handleBassValueChange = (property, value) => {\n      const bassSettings = this.state.bassSettings;\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'synthVolume') {\n        bassSynth.volume.value = value;\n        bassSettings.synth.volume = value;\n      }\n      this.setState({\n        bassSettings\n      });\n    };\n    this.handleMelodyValueChange = (property, value) => {\n      const melodySettings = this.state.melodySettings;\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'synthVolume') {\n        melodySynth.volume.value = value;\n        melodySettings.synth.volume = value;\n      }\n      this.setState({\n        melodySettings\n      });\n    };\n    this.state = {\n      bassSettings,\n      melodySettings,\n      firstSettings\n    };\n  }\n  render() {\n    const _this$state2 = this.state,\n      bassSettings = _this$state2.bassSettings,\n      melodySettings = _this$state2.melodySettings;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controls\"\n    }, /*#__PURE__*/React.createElement(SC_Button, {\n      text: \"\\u25B6\",\n      handleClick: this.handleStart\n    }), /*#__PURE__*/React.createElement(SC_Button, {\n      text: \"\\u25A0\",\n      handleClick: this.handleEnd\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"melodies\"\n    }, /*#__PURE__*/React.createElement(ToneSynth, {\n      settings: bassSettings,\n      handleValueChange: this.handleBassValueChange\n    }), /*#__PURE__*/React.createElement(ToneSynth, {\n      settings: melodySettings,\n      handleValueChange: this.handleMelodyValueChange\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"drums\"\n    }, /*#__PURE__*/React.createElement(Drums, null)));\n  }\n}","map":{"version":3,"names":["Tone","React","Component","bassSettings","firstSettings","melodySettings","Drums","ToneSynth","SC_Button","SC_Slider","bassSynth","bassChorus","bassPingPongDelay","firstSynth","melodySynth","melodyChorus","melodyPingPongDelay","Container","constructor","props","handleEnd","Transport","stop","handleStart","state","Synth","synth","Chorus","chorus","start","PingPongDelay","pingPongDelay","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","melodyPart","firstPart","channelFirstSettings","volume","pan","mute","solo","channelFirst","Channel","handleBassValueChange","property","value","oscillator","type","envelope","sustain","release","setState","handleMelodyValueChange","render"],"sources":["/Users/mar/Share/sea/app/javascript/prototypes/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass.js'\nimport * as firstSettings from './tunes/firstDrum.js'\nimport * as melodySettings from './tunes/melody.js'\n\nimport Drums from './modules/Drums.jsx'\nimport ToneSynth from './modules/MainTune.jsx'\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\n\nlet bassSynth\nlet bassChorus\nlet bassPingPongDelay\n\nlet firstSynth\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bassSettings,\n      melodySettings,\n      firstSettings\n    }\n  }\n\n  handleEnd = () => {\n    Tone.Transport.stop()\n  }\n\n  handleStart = () => {\n    const { melodySettings, bassSettings, firstSettings } = this.state\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassChorus = new Tone.Chorus(bassSettings.chorus).start()\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    bassSynth.chain(bassChorus, bassPingPongDelay)\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = true\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = true\n    //\n    firstSynth = new Tone.Synth(firstSettings.synth)\n    \n        const firstPart = new Tone.Part((time, note) => {\n          firstSynth.triggerAttackRelease(\n            note.noteName,\n            note.duration,\n            time,\n            note.velocity\n          )\n        }, firstSettings.sequence.steps).start(0)\n    \n        firstPart.loopEnd = firstSettings.sequence.duration\n        firstPart.loop = true\n\n        const channelFirstSettings = { volume: 0, pan: 0, mute: false, solo: false }\n        const channelFirst = new Tone.Channel(channelFirstSettings).toDestination()\n        firstSynth.chain(channelFirst)\n    //\n\n    Tone.Transport.start()\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'synthVolume') {\n      bassSynth.volume.value = value\n      bassSettings.synth.volume = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'synthVolume') {\n      melodySynth.volume.value = value\n      melodySettings.synth.volume = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  render() {\n    const { bassSettings, melodySettings } = this.state\n\n    return (\n      <div className=\"Container\">\n        <div className=\"controls\">\n          <SC_Button\n            text=\"▶\"\n            handleClick={this.handleStart}\n          />\n          <SC_Button\n            text=\"■\"\n            handleClick={this.handleEnd}\n          />\n        </div>\n\n      <div className=\"melodies\">\n        <ToneSynth\n          settings={bassSettings}\n          handleValueChange={this.handleBassValueChange}\n        />\n        <ToneSynth\n          settings={melodySettings}\n          handleValueChange={this.handleMelodyValueChange}\n        />\n      </div>\n      <div className=\"drums\">\n        <Drums/>\n      </div>\n      </div>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}